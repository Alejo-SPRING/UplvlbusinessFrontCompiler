{"version":3,"sources":["./node_modules/ngx-countdown/__ivy_ngcc__/fesm2015/ngx-countdown.js","./node_modules/uuid/dist/esm-browser/index.js","./node_modules/uuid/dist/esm-browser/md5.js","./node_modules/uuid/dist/esm-browser/nil.js","./node_modules/uuid/dist/esm-browser/parse.js","./node_modules/uuid/dist/esm-browser/regex.js","./node_modules/uuid/dist/esm-browser/rng.js","./node_modules/uuid/dist/esm-browser/sha1.js","./node_modules/uuid/dist/esm-browser/stringify.js","./node_modules/uuid/dist/esm-browser/v1.js","./node_modules/uuid/dist/esm-browser/v3.js","./node_modules/uuid/dist/esm-browser/v35.js","./node_modules/uuid/dist/esm-browser/v4.js","./node_modules/uuid/dist/esm-browser/v5.js","./node_modules/uuid/dist/esm-browser/validate.js","./node_modules/uuid/dist/esm-browser/version.js","./src/app/views/pages/registrar/activar-cuenta/activar-cuenta.component.ts","./src/app/views/pages/registrar/activar-cuenta/activar-cuenta.component.html","./src/app/views/pages/registrar/cuenta-activa/cuenta-activa.component.ts","./src/app/views/pages/registrar/cuenta-activa/cuenta-activa.component.html","./src/app/views/pages/registrar/registrar.component.ts","./src/app/views/pages/registrar/registrar.component.html","./src/app/views/pages/registrar/registrar.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqN;AAC1J;;AAEnB;AACE;;AAE1C,8DAA8D;AAC9D,IAAI,qEAA8B;AAClC,IAAI,uDAAgB;AACpB,IAAI,mEAA4B;AAChC,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,6BAA6B,4DAAqB;AACvE,CAAC;AACD,8DAA8D;AAC9D,IAAI,gEAAyB;AAC7B,CAAC;AACD,2BAA2B,SAAS,iBAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,0DAA0D,kCAAkC,sDAAe,CAAC,oDAAa,GAAG;AAC5H,uBAAuB,gEAAyB,EAAE,sDAAsD;AACxG;AACA,KAAK,OAAO,oDAAM;AAClB;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,OAAO,oDAAa,EAAE,EAAE,EAAE,QAAQ,EAAE;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD,mBAAmB,kEAAU;AAC7B;AACA;AACA;AACA;AACA,wEAAwE,yCAAyC,sDAAe,CAAC,uDAAS,GAAG;AAC7I,8BAA8B,wEAAkB,EAAE,oDAAoD,kCAAkC,8DAAQ,CAAC,uDAAS,GAAG,EAAE,oDAAoD;AACnN;AACA,KAAK,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI;AACrE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,uDAAS;AAChC,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kEAAkE;AAC3F;AACA;AACA,eAAe,iBAAiB;AAChC,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mEAAmE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,sCAAsC,+DAAwB,CAAC,uDAAS,GAAG,+DAAwB,kBAAkB,+DAAwB,yBAAyB,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,oDAAa,GAAG;AACrU,0BAA0B,+DAAwB,EAAE,qIAAqI;AACzL,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,qCAAqC,YAAY,iBAAiB,aAAa,kEAA2B,4KAA4K;AACxS,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,KAAK;AACL,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB,4DAA4D,6DAAsB;AAC3G,KAAK,EAAE,eAAe,oDAAW,EAAE,gEAAuB,yCAAyC;AACnG;AACA,KAAK,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI,GAAG;AACxE,KAAK,uBAAuB;AAC5B,KAAK,8BAA8B;AACnC,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B,cAAc,OAAO,mDAAK,EAAE;AAC5B,aAAa,OAAO,oDAAM,EAAE;AAC5B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,WAAW,eAAe;AACtE;AACA,uBAAuB,+BAA+B;AACtD,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,aAAa;AACb,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,uDAAS;AAChC,aAAa,GAAG,GAAG,uBAAuB,GAAG,8BAA8B,GAAG,OAAO,+DAAwB,EAAE,GAAG,OAAO,oDAAa,EAAE,EAAE,EAAE,GAAG;AAC/I,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA,uBAAuB,8DAAuB,EAAE,wBAAwB;AACxE,uBAAuB,8DAAuB,EAAE,+CAA+C,qCAAqC,EAAE,0CAA0C,4DAAY,IAAI;AAChM,cAAc,oDAAoD,gEAAyB,mBAAmB,4BAA4B,6BAA6B,EAAE,wBAAwB,SAAS,4DAAY,EAAE,EAAE,wBAAwB,6BAA6B,EAAE,EAAE,EAAE,EAAE;AACvR,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA,0BAA0B,4DAAY;AACtC;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;;AAEuG;;AAEvG,yC;;;;;;;;;;;;ACpWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACA;AACA;AACA;AACE;AACQ;AACE;AACE;;;;;;;;;;;;;ACPtD;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;;AAElD;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AA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","file":"views-pages-registrar-registrar-module.js","sourcesContent":["import { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, LOCALE_ID, Inject, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Input, Output, NgModule } from '@angular/core';\nimport { formatDate, CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction CountdownComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"span\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.i.text, ɵngcc0.ɵɵsanitizeHtml);\n} }\nfunction CountdownComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nconst _c0 = function (a0) { return { $implicit: a0 }; };\nvar CountdownStatus;\n(function (CountdownStatus) {\n    CountdownStatus[CountdownStatus[\"ing\"] = 0] = \"ing\";\n    CountdownStatus[CountdownStatus[\"pause\"] = 1] = \"pause\";\n    CountdownStatus[CountdownStatus[\"stop\"] = 2] = \"stop\";\n    CountdownStatus[CountdownStatus[\"done\"] = 3] = \"done\";\n})(CountdownStatus || (CountdownStatus = {}));\n\nclass CountdownTimer {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.fns = [];\n        this.commands = [];\n        this.ing = false;\n    }\n    start() {\n        if (this.ing === true) {\n            return;\n        }\n        this.ing = true;\n        this.nextTime = +new Date();\n        this.ngZone.runOutsideAngular(() => {\n            this.process();\n        });\n    }\n    process() {\n        while (this.commands.length) {\n            this.commands.shift()();\n        }\n        let diff = +new Date() - this.nextTime;\n        const count = 1 + Math.floor(diff / 100);\n        diff = 100 - (diff % 100);\n        this.nextTime += 100 * count;\n        for (let i = 0, len = this.fns.length; i < len; i += 2) {\n            let frequency = this.fns[i + 1];\n            // 100/s\n            if (0 === frequency) {\n                this.fns[i](count);\n                // 1000/s\n            }\n            else {\n                // 先把末位至0，再每次加2\n                frequency += 2 * count - 1;\n                const step = Math.floor(frequency / 20);\n                if (step > 0) {\n                    this.fns[i](step);\n                }\n                // 把末位还原成1\n                this.fns[i + 1] = (frequency % 20) + 1;\n            }\n        }\n        if (!this.ing) {\n            return;\n        }\n        setTimeout(() => this.process(), diff);\n    }\n    add(fn, frequency) {\n        this.commands.push(() => {\n            this.fns.push(fn);\n            this.fns.push(frequency === 1000 ? 1 : 0);\n            this.ing = true;\n        });\n        return this;\n    }\n    remove(fn) {\n        this.commands.push(() => {\n            const i = this.fns.indexOf(fn);\n            if (i !== -1) {\n                this.fns.splice(i, 2);\n            }\n            this.ing = this.fns.length > 0;\n        });\n        return this;\n    }\n}\nCountdownTimer.ɵfac = function CountdownTimer_Factory(t) { return new (t || CountdownTimer)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nCountdownTimer.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: CountdownTimer, factory: CountdownTimer.ɵfac });\nCountdownTimer.ctorParameters = () => [\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CountdownTimer, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, null); })();\n\n// tslint:disable: no-inferrable-types\nclass CountdownGlobalConfig {\n    constructor(locale) {\n        this.locale = locale;\n        this.demand = false;\n        this.leftTime = 0;\n        this.format = 'HH:mm:ss';\n        this.timezone = '+0000';\n        this.formatDate = ({ date, formatStr, timezone }) => {\n            return formatDate(new Date(date), formatStr, this.locale, timezone || this.timezone || '+0000');\n            // tslint:disable-next-line: semicolon\n        };\n    }\n}\nCountdownGlobalConfig.ɵfac = function CountdownGlobalConfig_Factory(t) { return new (t || CountdownGlobalConfig)(ɵngcc0.ɵɵinject(LOCALE_ID)); };\nCountdownGlobalConfig.ɵprov = ɵɵdefineInjectable({ factory: function CountdownGlobalConfig_Factory() { return new CountdownGlobalConfig(ɵɵinject(LOCALE_ID)); }, token: CountdownGlobalConfig, providedIn: \"root\" });\nCountdownGlobalConfig.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CountdownGlobalConfig, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Inject,\n                args: [LOCALE_ID]\n            }] }]; }, null); })();\n\nclass CountdownComponent {\n    constructor(locale, timer, defCog, cdr, ngZone) {\n        this.locale = locale;\n        this.timer = timer;\n        this.defCog = defCog;\n        this.cdr = cdr;\n        this.ngZone = ngZone;\n        this.frequency = 1000;\n        this._notify = {};\n        this.status = CountdownStatus.ing;\n        this.isDestroy = false;\n        this.i = {};\n        this.left = 0;\n        this.event = new EventEmitter();\n    }\n    /**\n     * Start countdown, you must manually call when `demand: false`\n     */\n    begin() {\n        this.status = CountdownStatus.ing;\n        this.callEvent('start');\n    }\n    /**\n     * Restart countdown\n     */\n    restart() {\n        if (this.status !== CountdownStatus.stop) {\n            this.destroy();\n        }\n        this.init();\n        this.callEvent('restart');\n    }\n    /**\n     * Stop countdown, must call `restart` when stopped, it's different from pause, unable to recover\n     */\n    stop() {\n        if (this.status === CountdownStatus.stop) {\n            return;\n        }\n        this.status = CountdownStatus.stop;\n        this.destroy();\n        this.callEvent('stop');\n    }\n    /**\n     * Pause countdown, you can use `resume` to recover again\n     */\n    pause() {\n        if (this.status === CountdownStatus.stop || this.status === CountdownStatus.pause) {\n            return;\n        }\n        this.status = CountdownStatus.pause;\n        this.callEvent('pause');\n    }\n    /**\n     * Resume countdown\n     */\n    resume() {\n        if (this.status === CountdownStatus.stop || this.status !== CountdownStatus.pause) {\n            return;\n        }\n        this.status = CountdownStatus.ing;\n        this.callEvent('resume');\n    }\n    callEvent(action) {\n        this.event.emit({ action, left: this.left, status: this.status, text: this.i.text });\n    }\n    init() {\n        const { locale, defCog } = this;\n        const config = (this.config = Object.assign(Object.assign(Object.assign({}, new CountdownGlobalConfig(locale)), defCog), this.config));\n        // tslint:disable-next-line: no-bitwise\n        const frq = (this.frequency = ~config.format.indexOf('S') ? 100 : 1000);\n        this.status = config.demand ? CountdownStatus.pause : CountdownStatus.ing;\n        this.getLeft();\n        // bind reflow to me\n        const _reflow = this.reflow;\n        this.reflow = (count = 0, force = false) => _reflow.apply(this, [count, force]);\n        if (Array.isArray(config.notify)) {\n            config.notify.forEach((time) => {\n                if (time < 1) {\n                    throw new Error(`The notify config must be a positive integer.`);\n                }\n                time = time * 1000;\n                time = time - (time % frq);\n                this._notify[time] = true;\n            });\n        }\n        this.timer.add(this.reflow, frq).start();\n        this.reflow(0, true);\n    }\n    destroy() {\n        this.timer.remove(this.reflow);\n        return this;\n    }\n    /**\n     * 更新时钟\n     */\n    reflow(count = 0, force = false) {\n        if (this.isDestroy) {\n            return;\n        }\n        const { status, config, _notify } = this;\n        if (!force && status !== CountdownStatus.ing) {\n            return;\n        }\n        let value = (this.left = this.left - this.frequency * count);\n        if (value < 1) {\n            value = 0;\n        }\n        this.i = {\n            value,\n            text: config.formatDate({ date: value, formatStr: config.format, timezone: config.timezone }),\n        };\n        if (typeof config.prettyText === 'function') {\n            this.i.text = config.prettyText(this.i.text);\n        }\n        this.cdr.detectChanges();\n        if (config.notify === 0 || _notify[value]) {\n            this.ngZone.run(() => {\n                this.callEvent('notify');\n            });\n        }\n        if (value === 0) {\n            this.ngZone.run(() => {\n                this.status = CountdownStatus.done;\n                this.callEvent('done');\n                this.destroy();\n            });\n        }\n    }\n    /**\n     * 获取倒计时剩余帧数\n     */\n    getLeft() {\n        const { config, frequency } = this;\n        let left = config.leftTime * 1000;\n        const end = config.stopTime;\n        if (!left && end) {\n            left = end - new Date().getTime();\n        }\n        this.left = left - (left % frequency);\n    }\n    ngOnInit() {\n        this.init();\n        if (!this.config.demand) {\n            this.begin();\n        }\n    }\n    ngOnDestroy() {\n        this.isDestroy = true;\n        this.destroy();\n    }\n    ngOnChanges(changes) {\n        if (!changes.config.firstChange) {\n            this.restart();\n        }\n    }\n}\nCountdownComponent.ɵfac = function CountdownComponent_Factory(t) { return new (t || CountdownComponent)(ɵngcc0.ɵɵdirectiveInject(LOCALE_ID), ɵngcc0.ɵɵdirectiveInject(CountdownTimer), ɵngcc0.ɵɵdirectiveInject(CountdownGlobalConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCountdownComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CountdownComponent, selectors: [[\"countdown\"]], hostVars: 2, hostBindings: function CountdownComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"count-down\", true);\n    } }, inputs: { config: \"config\", render: \"render\" }, outputs: { event: \"event\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 5, consts: [[4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"innerHTML\"]], template: function CountdownComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, CountdownComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, CountdownComponent_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.render);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.render)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(3, _c0, ctx.i));\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });\nCountdownComponent.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },\n    { type: CountdownTimer },\n    { type: CountdownGlobalConfig },\n    { type: ChangeDetectorRef },\n    { type: NgZone }\n];\nCountdownComponent.propDecorators = {\n    config: [{ type: Input }],\n    render: [{ type: Input }],\n    event: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CountdownComponent, [{\n        type: Component,\n        args: [{\n                selector: 'countdown',\n                template: `\n    <ng-container *ngIf=\"!render\">\n      <span [innerHTML]=\"i.text\"></span>\n    </ng-container>\n    <ng-container *ngTemplateOutlet=\"render; context: { $implicit: i }\"></ng-container>\n  `,\n                host: { '[class.count-down]': 'true' },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Inject,\n                args: [LOCALE_ID]\n            }] }, { type: CountdownTimer }, { type: CountdownGlobalConfig }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }]; }, { event: [{\n            type: Output\n        }], config: [{\n            type: Input\n        }], render: [{\n            type: Input\n        }] }); })();\n\nclass CountdownModule {\n}\nCountdownModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CountdownModule });\nCountdownModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CountdownModule_Factory(t) { return new (t || CountdownModule)(); }, providers: [CountdownTimer], imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CountdownModule, { declarations: function () { return [CountdownComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [CountdownComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CountdownModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                providers: [CountdownTimer],\n                declarations: [CountdownComponent],\n                exports: [CountdownComponent]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CountdownComponent, CountdownGlobalConfig, CountdownModule, CountdownStatus, CountdownTimer };\n\n//# sourceMappingURL=ngx-countdown.js.map","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UsuarioService } from 'src/app/services/usuario.service';\r\nimport { LoaderComponent } from 'src/app/views/loader/loader.component';\r\nimport { MensajesComponent } from 'src/app/views/mensajes/mensajes.component';\r\nimport swal from 'sweetalert2';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\n@Component({\r\n  selector: 'app-activar-cuenta',\r\n  templateUrl: './activar-cuenta.component.html',\r\n  styleUrls: ['./activar-cuenta.component.scss']\r\n})\r\nexport class ActivarCuentaComponent implements OnInit {\r\n\r\n\r\n  private mensajes: MensajesComponent = new MensajesComponent(this.routerNav);\r\n\r\n  constructor(private router:ActivatedRoute, private routerNav: Router, private usuarioService: UsuarioService) { }\r\n\r\n  ngOnInit(): void {\r\n    LoaderComponent.status = true;\r\n    this.router.params.subscribe(\r\n      parametro => {\r\n        if(parametro[\"token\"]) {\r\n          if(parametro[\"token\"] != \"ver\") {\r\n            LoaderComponent.status = true;\r\n            this.usuarioService.activarCuenta(parametro[\"token\"]).subscribe(\r\n              response => {\r\n                  sessionStorage.setItem(\"code\", uuidv4());\r\n                  this.routerNav.navigate([\"/cuentaActiva\", sessionStorage.getItem(\"code\")]);\r\n                  LoaderComponent.status = false;\r\n              },\r\n              error => {\r\n                this.mensajes.mensajesError(error);\r\n                LoaderComponent.status = false;\r\n                this.routerNav.navigate([\"/\"]);\r\n              }\r\n            );\r\n          }else{\r\n            LoaderComponent.status = false;\r\n          }\r\n        } else {\r\n          LoaderComponent.status = false;\r\n          this.routerNav.navigate([\"/\"]);\r\n        }\r\n      },\r\n      error => {\r\n        this.mensajes.mensajesError(error);\r\n        LoaderComponent.status = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  handleEvent($event) {\r\n    if ($event.action == \"notify\") {\r\n      const Toast = swal.mixin({\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: 4000,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n          toast.addEventListener('mouseenter', swal.stopTimer)\r\n          toast.addEventListener('mouseleave', swal.resumeTimer)\r\n        }\r\n      })\r\n\r\n      Toast.fire({\r\n        icon: 'warning',\r\n        title: '¡Falta poco para expirar tu registro!'\r\n      })\r\n    }\r\n    if($event.action == \"done\") {\r\n      swal.fire(\"¡Registro expirado!\", \"\", \"info\");\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<nav class=\"page-breadcrumb\">\r\n    <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\"><a routerLink=\"/\">Inicio</a></li>\r\n        <li class=\"breadcrumb-item\"><a routerLink=\"/registrar\">Registrar</a></li>\r\n        <li class=\"breadcrumb-item\" aria-current=\"page\">Activar cuenta</li>\r\n    </ol>\r\n</nav>\r\n<div class=\"row\">\r\n    <div class=\"col-12 grid-margin stretch-card\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row mt-5\">\r\n                    <div class=\"col-12 col-md-6\">\r\n                        <img src=\"assets/ilustraciones/tiempo_espera.svg\" class=\"img-fluid\" alt=\"\">\r\n                    </div>\r\n                    <div class=\"col-12 col-md-6\">\r\n                        <div class=\"card card-body border-0\">\r\n                            <h1 class=\"text-center display-1\">\r\n                                <countdown [config]=\"{leftTime: 300, notify: [ 60 ]}\" (event)=\"handleEvent($event)\"></countdown>\r\n                            </h1>\r\n                            <hr>\r\n                            <p class=\"texto text-justify\">¡Tienes 5 minutos para activar tu cuenta! Por favor revisa tu correo.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-cuenta-activa',\r\n  templateUrl: './cuenta-activa.component.html',\r\n  styleUrls: ['./cuenta-activa.component.scss']\r\n})\r\nexport class CuentaActivaComponent implements OnInit {\r\n\r\n  constructor(private activeRouter:ActivatedRoute, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.activeRouter.params.subscribe(\r\n      parametro => {\r\n        if(parametro[\"code\"]){\r\n          if(parametro[\"code\"] != sessionStorage.getItem(\"code\")){\r\n            this.router.navigate([\"/\"]);  \r\n          } else{\r\n            sessionStorage.removeItem(\"code\");\r\n          }\r\n        } else {\r\n          this.router.navigate([\"/\"]);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<nav class=\"page-breadcrumb\">\r\n    <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\"><a routerLink=\"/\">Inicio</a></li>\r\n        <li class=\"breadcrumb-item\"><a routerLink=\"/registrar\">Registrar</a></li>\r\n        <li class=\"breadcrumb-item\" aria-current=\"page\">Cuenta activa</li>\r\n    </ol>\r\n</nav>\r\n<div class=\"row\">\r\n    <div class=\"col-12 grid-margin stretch-card\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row justify-content-center\">\r\n                    <div class=\"col-12 col-md-8\">\r\n                        <p class=\"display-4 text-center texto-color2\">¡Has finalizado el proceso de registro con éxito!</p>\r\n                        <a [routerLink]=\"[ '/ingresar']\" class=\"btn btn-outline-success rounded-pill\"><i class=\"feather icon-log-in\"></i> Ingresar</a>\r\n                        <img src=\"assets/ilustraciones/cuentaActiva.svg\" class=\"img-fluid\" alt=\"\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UsuarioService } from 'src/app/services/usuario.service';\r\nimport { LoaderComponent } from '../../loader/loader.component';\r\nimport { MensajesComponent } from '../../mensajes/mensajes.component';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-registrar',\r\n  templateUrl: './registrar.component.html',\r\n  styleUrls: ['./registrar.component.scss']\r\n})\r\nexport class RegistrarComponent implements OnInit {\r\n\r\n  public clienteDto: {\r\n    id:number\r\n    nombre: string,\r\n    apellido: string,\r\n    correo: string,\r\n    password: string,\r\n    telefono: string,\r\n    direccion: string,\r\n    apodo: string\r\n  };\r\n\r\n  public passV: string = \"\";\r\n  public passIgual: boolean;\r\n  private mensajesComponent: MensajesComponent = new MensajesComponent(this.router);\r\n\r\n  constructor(private usuarioService: UsuarioService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    LoaderComponent.status = true;\r\n    this.clienteDto = {\r\n      id: 0,\r\n      nombre: \"\",\r\n      apellido: \"\",\r\n      correo: \"\",\r\n      password: \"\",\r\n      telefono: \"\",\r\n      direccion: \"\",\r\n      apodo: \"\"\r\n    };\r\n    this.passV = \"\";\r\n    this.passIgual = null;\r\n    LoaderComponent.status = false;\r\n  }\r\n\r\n  public validarClaves(): void{\r\n    this.passIgual = this.passV == this.clienteDto.password && this.clienteDto.password.length > 0;\r\n  }\r\n\r\n  public crearCliente(): void {\r\n    LoaderComponent.status = true;\r\n    this.usuarioService.crearCliente(this.clienteDto).subscribe(\r\n      response => {\r\n        if(response.status != null){\r\n          swal.fire(\"¡Error!\", response.mensaje, \"warning\");\r\n          LoaderComponent.status = false;\r\n        } else {\r\n          swal.fire(\"¡Activa tu cuenta!\", response.mensaje + \", ya estas a pocos pasos de terminar tu registro!\", \"success\");\r\n          this.ngOnInit();\r\n          LoaderComponent.status = false;\r\n          this.router.navigate([\"/activarCuenta/ver\"]);\r\n        }\r\n      },\r\n      error => {\r\n        this.mensajesComponent.mensajesError(error);\r\n        LoaderComponent.status = false;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<nav class=\"page-breadcrumb\">\r\n    <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\"><a routerLink=\"/\">Inicio</a></li>\r\n        <li class=\"breadcrumb-item\" aria-current=\"page\">Registrar</li>\r\n    </ol>\r\n</nav>\r\n<div class=\"row w-100 mx-0 auth-page\">\r\n    <div class=\"col-md-9 col-xl-7 mx-auto\">\r\n        <div class=\"card\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-4 pr-md-0\">\r\n                    <div class=\"auth-left-wrapper\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-8 pl-md-0\">\r\n                    <div class=\"auth-form-wrapper px-4 py-5\">\r\n                        <a routerLink=\".\" class=\"noble-ui-logo d-block mb-2 texto-color2\">Dragon<span class=\"texto-color\">Militar</span></a>\r\n                        <h5 class=\"text-muted font-weight-normal mb-4\">Crea una cuenta gratis.</h5>\r\n                        <form class=\"forms-sample\" #form=\"ngForm\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <label for=\"correo\" class=\"text-dark\">Correo</label> <input type=\"email\" autocomplete=\"off\" class=\"form-control rounded-pill\" id=\"correo\" placeholder=\"Correo\" [(ngModel)]=\"clienteDto.correo\" name=\"correo\" #correo=\"ngModel\"\r\n                                        [class.is-valid]=\"!correo.invalid && (correo.touched || correo.dirty)\" [class.is-invalid]=\"correo.invalid && (correo.touched || correo.dirty)\" required minlength=\"6\" maxlength=\"100\" pattern=\"^[a-z0-9!#$%'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\">\r\n                                    <div *ngIf=\"correo.invalid && (correo.dirty || correo.touched)\">\r\n                                        <div *ngIf=\"correo.errors.required\">\r\n                                            <p class=\"text-danger\">¡Ingresa un correo!</p>\r\n                                        </div>\r\n                                        <div *ngIf=\"correo.errors.minlength\">\r\n                                            <p class=\"text-danger\">¡Ingresa un correo con minimo 7 caracteres!</p>\r\n                                        </div>\r\n                                        <div *ngIf=\"correo.errors.maxlength\">\r\n                                            <p class=\"text-danger\">¡Ingresa un correo con maximo 100 caracteres!</p>\r\n                                        </div>\r\n                                        <div *ngIf=\"correo.errors.pattern\">\r\n                                            <p class=\"text-danger\">¡Ingresa un correo correcto!</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-12\">\r\n                                    <label for=\"apodo\" class=\"text-dark\">Nick name</label> <input type=\"text\" autocomplete=\"off\" class=\"form-control rounded-pill\" id=\"apodo\" placeholder=\"Nick name\" [(ngModel)]=\"clienteDto.apodo\" required minlength=\"5\"\r\n                                        maxlength=\"20\" #apodo=\"ngModel\" name=\"apodo\" [class.is-valid]=\"!apodo.invalid && (apodo.touched || apodo.dirty)\" [class.is-invalid]=\"apodo.invalid && (apodo.touched || apodo.dirty)\" />\r\n                                    <div *ngIf=\"apodo.invalid && (apodo.touched || apodo.dirty)\">\r\n                                        <div *ngIf=\"apodo.errors.required\">\r\n                                            <p class=\"text-danger\">¡Ingresa un Nick name!</p>\r\n                                        </div>\r\n                                        <div *ngIf=\"apodo.errors.minlength\">\r\n                                            <p class=\"text-danger\">¡Ingresa un Nick name con minimo 5 caracteres!</p>\r\n                                        </div>\r\n                                        <div *ngIf=\"apodo.errors.maxlength\">\r\n                                            <p class=\"text-danger\">¡Ingresa un Nick name con maximo 20 caracteres!</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-12 col-lg-6\">\r\n                                    <label for=\"nombre\" class=\"text-dark\">Nombre</label> <input type=\"text\" autocomplete=\"off\" class=\"form-control rounded-pill\" id=\"nombre\" placeholder=\"Nombre\" [(ngModel)]=\"clienteDto.nombre\" required minlength=\"4\" maxlength=\"25\"\r\n                                        #nombre=\"ngModel\" name=\"nombre\" [class.is-valid]=\"!nombre.invalid && (nombre.touched || nombre.dirty)\" [class.is-invalid]=\"nombre.invalid && (nombre.touched || nombre.dirty)\" />\r\n                                    <div *ngIf=\"nombre.invalid && (nombre.touched || nombre.dirty)\">\r\n                                        <div *ngIf=\"nombre.errors.required\">\r\n                                            <p class=\"text-danger\">¡Ingresa un nombre!</p>\r\n                                        </div>\r\n                                        <div *ngIf=\"nombre.errors.minlength\">\r\n                                            <p class=\"text-danger\">¡Ingresa un nombre con minimo 4 caracteres!</p>\r\n                                        </div>\r\n                                        <div *ngIf=\"nombre.errors.maxlength\">\r\n                                            <p class=\"text-danger\">¡Ingresa un nombre con maximo 25 caracteres!</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-12 col-lg-6\">\r\n                                    <label for=\"apellido\" class=\"text-dark\">Apellido</label> <input type=\"text\" class=\"form-control rounded-pill\" id=\"apellido\" autocomplete=\"off\" placeholder=\"Apellido\" [(ngModel)]=\"clienteDto.apellido\" #apellido=\"ngModel\"\r\n                                        name=\"apellido\" required minlength=\"4\" maxlength=\"25\" [class.is-valid]=\"!apellido.invalid && (apellido.dirty || apellido.touched)\" [class.is-invalid]=\"apellido.invalid && (apellido.dirty || apellido.touched)\" />\r\n                                    <div *ngIf=\"apellido.invalid && (apellido.touched || apellido.dirty)\">\r\n                                        <div *ngIf=\"apellido.errors.required\">\r\n                                            <p class=\"text-danger\">¡Ingresa un apellido!</p>\r\n                                        </div>\r\n                                        <div *ngIf=\"apellido.errors.minlength\">\r\n                                            <p class=\"text-danger\">¡Ingresa un apellido con minimo 4 caracteres!</p>\r\n                                        </div>\r\n                                        <div *ngIf=\"apellido.errors.maxlength\">\r\n                                            <p class=\"text-danger\">¡Ingresa un apellido con maximo 25 caracteres!</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-12 col-md-6\">\r\n                                    <label for=\"direccion\" class=\"text-dark\">Dirección</label>\r\n                                    <textarea class=\"form-control\" id=\"direccion\" autocomplete=\"off\" placeholder=\"Dirección\" [(ngModel)]=\"clienteDto.direccion\" name=\"direccion\" #direccion=\"ngModel\" required minlength=\"5\" maxlength=\"45\" [class.is-valid]=\"!direccion.invalid && (direccion.dirty || direccion.touched)\"\r\n                                        [class.is-invalid]=\"direccion.invalid && (direccion.dirty || direccion.touched)\"></textarea>\r\n                                    <div *ngIf=\"direccion.invalid && (direccion.touched || direccion.dirty)\">\r\n                                        <div *ngIf=\"direccion.errors.required\">\r\n                                            <p class=\"text-danger\">¡Ingresa una dirección!</p>\r\n                                        </div>\r\n                                        <div *ngIf=\"direccion.errors.minlength\">\r\n                                            <p class=\"text-danger\">¡Ingresa una dirección con minimo 5 caracteres!</p>\r\n                                        </div>\r\n                                        <div *ngIf=\"direccion.errors.maxlength\">\r\n                                            <p class=\"text-danger\">¡Ingresa una dirección con maximo 45 caracteres!</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-12 col-md-6\">\r\n                                    <label for=\"telefono\" class=\"text-dark\">Telefono</label> <input type=\"text\" class=\"form-control rounded-pill\" id=\"telefono\" autocomplete=\"off\" placeholder=\"Telefono\" [(ngModel)]=\"clienteDto.telefono\" name=\"telefono\"\r\n                                        #telefono=\"ngModel\" required minlength=\"10\" maxlength=\"10\" [class.is-valid]=\"!telefono.invalid && (telefono.dirty || telefono.touched)\" [class.is-invalid]=\"telefono.invalid && (telefono.dirty || telefono.touched)\" pattern=\"[0-9]*\"\r\n                                    />\r\n                                    <div *ngIf=\"telefono.invalid && (telefono.touched || telefono.dirty)\">\r\n                                        <div *ngIf=\"telefono.errors.required\">\r\n                                            <p class=\"text-danger\">¡Ingresa un telefono!</p>\r\n                                        </div>\r\n                                        <div *ngIf=\"telefono.errors.minlength && telefono.errors.pattern == null\">\r\n                                            <p class=\"text-danger\">¡Ingresa un telefono con minimo 10 caracteres!</p>\r\n                                        </div>\r\n                                        <div *ngIf=\"telefono.errors.maxlength\">\r\n                                            <p class=\"text-danger\">¡Ingresa un telefono con maximo 10 caracteres!</p>\r\n                                        </div>\r\n                                        <div *ngIf=\"telefono.errors.pattern\">\r\n                                            <p class=\"text-danger\">¡Ingresa un numero de telefono valido!</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-12 col-md-6\">\r\n                                    <label for=\"pass\" class=\"text-dark\">Contraseña</label> <input type=\"password\" autocomplete=\"off\" (keyup)=\"validarClaves()\" class=\"form-control rounded-pill\" id=\"pass\" placeholder=\"*******\" [(ngModel)]=\"clienteDto.password\"\r\n                                        name=\"password\" #password=\"ngModel\" required minlength=\"5\" maxlength=\"10\" [class.is-valid]=\"!password.invalid && (password.dirty || password.touched)\" [class.is-invalid]=\"password.invalid && (password.dirty || password.touched)\"\r\n                                    />\r\n                                    <div *ngIf=\"password.invalid && (password.touched || password.dirty)\">\r\n                                        <div *ngIf=\"password.errors.required\">\r\n                                            <p class=\"text-danger\">¡Ingresa una contraseña!</p>\r\n                                        </div>\r\n                                        <div *ngIf=\"password.errors.minlength\">\r\n                                            <p class=\"text-danger\">¡Ingresa una contraseña con minimo 5 caracteres!</p>\r\n                                        </div>\r\n                                        <div *ngIf=\"password.errors.maxlength\">\r\n                                            <p class=\"text-danger\">¡Ingresa una contraseña con maximo 10 caracteres!</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-12 col-md-6\">\r\n                                    <label for=\"passV\" class=\"text-dark\">Verificar\r\n                                    contraseña</label> <input type=\"password\" class=\"form-control rounded-pill\" (keyup)=\"validarClaves()\" autocomplete=\"off\" id=\"passV\" placeholder=\"*******\" [(ngModel)]=\"passV\" required\r\n                                        name=\"passV\" #passv=\"ngModel\" [class.is-valid]=\"(!passv.invalid && (passv.touched || passv.dirty)) || (passIgual && passIgual != null)\" [class.is-invalid]=\"(passv.invalid && (passv.touched || passv.dirty)) || (!passIgual && passIgual != null)\"\r\n                                    />\r\n                                    <div *ngIf=\"passv.invalid && (passv.dirty || passv.touched)\">\r\n                                        <div *ngIf=\"passv.errors.required\">\r\n                                            <p class=\"text-danger\">¡Ingresa una verificación de contraseña!</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"passIgual != null && !passIgual\">\r\n                                        <p class=\"text-danger\">¡Las contraseñas no coinciden!</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-12 mt-3\">\r\n                                    <button type=\"button\" [disabled]=\"!form.form.valid || (passIgual == null || passIgual == false)\" (click)=\"crearCliente()\" class=\"btn rounded-pill fondo text-light mr-2 mb-2 mb-md-0\"><i class=\"feather icon-user-plus btn-icon-prepend\"></i> Registrar</button>\r\n                                    <a routerLink=\"/ingresar\" class=\"d-block mt-3 text-muted\">Ya estas registrado? Ingresar</a>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RegistrarComponent } from './registrar.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ActivarCuentaComponent } from './activar-cuenta/activar-cuenta.component';\r\nimport { CuentaActivaComponent } from './cuenta-activa/cuenta-activa.component';\r\nimport { CountdownModule } from 'ngx-countdown';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:\"registrar\", component: RegistrarComponent\r\n  },\r\n  {\r\n    path:\"activarCuenta/:token\", component: ActivarCuentaComponent\r\n  },\r\n  {\r\n    path:\"cuentaActiva/:code\", component: CuentaActivaComponent\r\n  }\r\n];\r\n@NgModule({\r\n  declarations: [RegistrarComponent, ActivarCuentaComponent, CuentaActivaComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    CountdownModule\r\n  ]\r\n})\r\nexport class RegistrarModule { }\r\n"],"sourceRoot":"webpack:///"}